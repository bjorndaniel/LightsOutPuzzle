@page "/"
@using LightsOutPuzzle.Common
<div class="row">
    <div class="col-sm text-center">
        <h3>
            A Blazor game based on 'Lights Out' with a Marvel-twist.
        </h3>
    </div>
</div>
<div class="row">
    <div class="col-sm">
        <table class="playing-field">
            @for (int row = 0; row < 5; row++)
            {
                <tr>
                    @for (int col = 0; col < 5; col++)
                    {
                        var tile = CurrentGame.GetTile(row, col);
                        <td class="tile" onclick="@(() => FlipTile(tile))">
                            <div class="flip-container" id="@($"row-{row+1}-col-{col+1}")">
                                    <div class="@(tile.ImageVisible ? "back" : "front")">
                                        <!-- front content -->
                                    </div>
                                    <div class="@(tile.ImageVisible ? "front" : "back")">
                                        <img class="img-tile" src="@($"images/row-{row+1}-col-{col+1}.jpg")">
                                    </div>
                            </div>
                        </td>
                    }
                </tr>
            }
        </table>
    </div>
</div>
<div class="row">
    <div class="col-sm text-center">
        <button class="btn btn-primary" onclick="@StartGame">@ButtonText</button>
    </div>
</div>
<div class="row">
    <div class="col-sm text-center">
        <h5>
            Click on a tile to adjust the state of tile and the direct adjecent ones.
        </h5>
        <h5>
            Keep on clicking to reveal the complete Marvel picture.
        </h5>
    </div>
</div>
<div class="row">
    <div class="col-sm text-center">
        <p class="small-text">
            Created by Marcofolio.net based on the electronic game 'Lights Out' from 1995 by Tiger Electronics. Picture used from Marvels 'Avengers: Infinity War' 2018 movie.
        </p>
    </div>
</div>

@functions
{
    Game CurrentGame { get; set; }
    bool IsStarted { get; set; }
    string ButtonText => IsStarted ? "Randomize and start over" : "StartGame";
    void StartGame()
    {
        CurrentGame = Game.RandomGame();
        IsStarted = true;
    }

    protected override void OnInit()
    {
        CurrentGame = Game.RandomGame();
        CurrentGame.HideAll();
    }
    void FlipTile(Tile tile)
    {
        if(!IsStarted)
        {
            return;
        }
        CurrentGame.FlipTile(tile.Row, tile.Column);
        if(CurrentGame.GameCompleted())
        {
            IsStarted = false;
            JsInterop.Alert("Well done, the Avengers are proud!");
        }
    }
}